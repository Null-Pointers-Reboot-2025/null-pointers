name: Platform â€“ Provision Core Infrastructure

on:
  push:
    paths:
      - "infra/core/**"
      - ".github/workflows/platform.yml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run (dev | prod)"
        required: true
        type: choice
        options: [ dev, prod ]

permissions:
  contents: read
  id-token: write

jobs:
  determine-envs:
    runs-on: ubuntu-latest
    outputs:
      env_list: '["dev","prod"]'
    steps:
      - name: Use both environments
        run: echo "envs=dev,prod"

  apply-core:
    needs: determine-envs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env: ${{ fromJson(needs.determine-envs.outputs.env_list) }}

    environment: ${{ matrix.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure login (OIDC)
        uses: azure/login@v1
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3

      - name: Terraform init
        working-directory: infra/core
        env:
          ARM_USE_OIDC: true
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          terraform init \
            -backend-config="storage_account_name=${{ secrets.TF_STATE_STORAGE_ACCOUNT }}" \
            -backend-config="container_name=${{ secrets.TF_STATE_CONTAINER }}" \
            -backend-config="key=${{ matrix.env }}-core.tfstate" \
            -backend-config="resource_group_name=${{ secrets.TF_STATE_RG }}"

      - name: Terraform apply
        working-directory: infra/core
        env:
          ARM_USE_OIDC: true
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve -var-file="env/${{ matrix.env }}.core.tfvars"