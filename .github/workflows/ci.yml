name: CI - Build, Test, Scan

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    environment: dev           # unlocks AZURE_* secrets
    steps:
      - uses: actions/checkout@v4

      - name: Debug OIDC Claims Info
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Environment: ${{ job.environment }}"
          echo "Expected Subject: repo:${{ github.repository }}:environment:${{ job.environment }}"

      - name: Azure login (OIDC)
        uses: azure/login@v1
        with:
          client-id:       ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:       ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

          enable-AzPSSession: true # Enable detailed Azure PowerShell/CLI logging
      # ── Compose ACR login-server ------------------------------------------------
      - id: acr
        run: |
          echo "server=${{ vars.ACR_NAME }}.azurecr.io" >> "$GITHUB_OUTPUT"
          # For debugging, you can add:
          echo "Using ACR: ${{ vars.ACR_NAME }}"

      - id: acr_creds
        run: |
          TOKEN=$(az acr login --name "${{ vars.ACR_NAME }}" --expose-token -o tsv --query accessToken)
          echo "::add-mask::$TOKEN"
          echo "usr=00000000-0000-0000-0000-000000000000" >> "$GITHUB_OUTPUT"
          echo "pwd=$TOKEN" >> "$GITHUB_OUTPUT"

      - name: Docker login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.acr.outputs.server }}
          username: ${{ steps.acr_creds.outputs.usr }}
          password: ${{ steps.acr_creds.outputs.pwd }}

      # ── Buildx setup -----------------------------------------------------------
      - uses: docker/setup-buildx-action@v3

      # ── Build & push both images -----------------------------------------------
      - name: Build and push all services
        run: |
          # Discover services from app directory
          SERVICES=$(find ./app -mindepth 1 -maxdepth 1 -type d -not -path "*/\.*" -exec basename {} \;)
          
          # Initialize empty digests object
          echo "{}" > digests.json
          
          # Build, push and collect digest for each service
          for SERVICE in $SERVICES; do
            echo "Building $SERVICE..."
            docker build -t ${{ steps.acr.outputs.server }}/$SERVICE:${{ github.sha }} ./app/$SERVICE
            docker push ${{ steps.acr.outputs.server }}/$SERVICE:${{ github.sha }}
            
            # Get digest and add to digests.json
            DIGEST=$(docker inspect --format='{{ index .RepoDigests 0 }}' ${{ steps.acr.outputs.server }}/$SERVICE:${{ github.sha }})
            TMP=$(mktemp)
            jq --arg svc "$SERVICE" --arg digest "$DIGEST" '. + {($svc): $digest}' digests.json > "$TMP"
            mv "$TMP" digests.json
          done
          
          # Display discovered services
          echo "Service digests captured:"
          cat digests.json

      - name: Upload image digests
        uses: actions/upload-artifact@v4
        with:
          name: image-digests-${{ github.sha }}
          path: digests.json
          retention-days: 90
